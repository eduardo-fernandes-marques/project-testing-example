module.exports = {
  rootDir: '../..',
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': ['babel-jest', { presets: ['next/babel'] }],
  },
  testEnvironment: 'jsdom',
  roots: ['<rootDir>/src'],
  collectCoverageFrom: [
    'src/{tests,contexts,hooks,components}/**/*.{js,jsx,ts,tsx}',
    '!src/**/*.d.ts',
    '!src/**/*.styles.ts',
    '!src/**/*.style.ts',
    '!src/i18n/**/*.{js,jsx,ts,tsx}',
    '!src/mocks/**/*.{js,jsx,ts,tsx}',
    '!src/styles/**/*.{js,jsx,ts,tsx}',
    '!src/styles/*.{js,jsx,ts,tsx}',
    '!src/utils/*.{js,jsx,ts,tsx}',
  ],
  coverageReporters: ['html', 'text', 'text-summary'],
  testMatch: [
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}',
  ],
  transformIgnorePatterns: [
    '[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$',
    '^.+\\.module\\.(css|sass|scss)$',
  ],
  moduleDirectories: ['node_modules'],
  moduleNameMapper: {
    '^src/(.*)$': '<rootDir>/src/$1',
    '^@components/(.*)': '<rootDir>/src/components/$1',
    '^@contexts/(.*)': '<rootDir>/src/contexts/$1',
    '^@utils/(.*)': '<rootDir>/src/utils/$1',
    '^@mocks/(.*)': '<rootDir>/src/mocks/$1',
    '^@hooks/(.*)': '<rootDir>/src/hooks/$1',
    '^@i18n/(.*)': '<rootDir>/src/i18n/$1',
    '^@lib/(.*)': '<rootDir>/src/lib/$1',
    '^@config/(.*)': '<rootDir>/src/config/$1',
    '^@models/(.*)': '<rootDir>/src/models/$1',
    '^@pages/(.*)': '<rootDir>/src/pages/$1',
    '^@pages': '<rootDir>/src/pages/index',
    '^@tests/(.*)': '<rootDir>/src/tests/$1',
    '^@styles/(.*)': '<rootDir>/src/styles/$1',
    '^@configs/(.*)': ['<rootDir>/configs/$1'],
    '\\.(md)$': '<rootDir>/configs/test/mock.js',
    '^axios$': require.resolve('axios'),
  },
  modulePaths: ['<rootDir>/src'],
  setupFilesAfterEnv: ['<rootDir>/configs/test/setupTests.ts'],
  resetMocks: true,
};
